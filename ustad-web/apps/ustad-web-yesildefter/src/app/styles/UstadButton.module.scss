@use '@styles/UstadDesignTokens.scss' as tokens;

.button {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  font-weight: 500;
  transition: all 0.2s ease;
  cursor: pointer;
  border: none;
  outline: none;
  white-space: nowrap;

  // Base styles
  &--primary {
    background-color: tokens.$color-primary;
    border: 1px solid tokens.$color-border-dark;
    border-radius: tokens.$button-radius-lg;
    color: tokens.$color-text-light;
    box-shadow: 0px 4px 0px 0px tokens.$color-shadow-button;

    &:hover {
      transform: translateY(-1px);
      box-shadow: 0px 5px 0px 0px tokens.$color-shadow-button;
    }

    &:active {
      transform: translateY(2px);
      box-shadow: 0px 2px 0px 0px tokens.$color-shadow-button;
    }
  }

  &--secondary {
    background-color: tokens.$color-background-light;
    border: 1px solid tokens.$color-border-dark;
    border-radius: tokens.$button-radius-lg;
    color: tokens.$color-text-dark;
    box-shadow: 0px 4px 0px 0px tokens.$color-shadow-secondary;

    &:hover {
      transform: translateY(-1px);
      box-shadow: 0px 5px 0px 0px tokens.$color-shadow-secondary;
    }
  }

  &--cta-nav {
    background-color: tokens.$color-background-light;
    border: 1px solid tokens.$color-border-dark;
    border-radius: 20px;
    color: tokens.$color-text-dark;
    box-shadow: 0px 4px 0px 0px tokens.$color-shadow-secondary;
  }

  // Sizes
  &--small {
    padding: 8px 16px;
    font-size: tokens.$font-size-sm;
  }

  &--medium {
    padding: 12px 20px;
    font-size: tokens.$font-size-base;
  }

  &--large {
    padding: 20px 24px;
    font-size: tokens.$font-size-lg;
  }

  // States
  &--disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }

  &--loading {
    cursor: wait;
    opacity: 0.7;

    .button__spinner {
      width: 16px;
      height: 16px;
      border: 2px solid transparent;
      border-top-color: currentColor;
      border-radius: 50%;
      animation: spin 0.6s linear infinite;
    }
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
