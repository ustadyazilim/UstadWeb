@use './UstadDesignTokens' as tokens;
@use './UstadTypography' as typography;

.features {
  margin: tokens.$spacing-xl auto;

  &__grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: tokens.$spacing-xl;
  }

  &__item {
    display: flex;
    gap: tokens.$spacing-lg;
    padding: tokens.$spacing-lg;
    background: tokens.$color-background-secondary;
    border-radius: tokens.$border-radius;
    transition: all 0.3s ease;

    &:hover {
      transform: translateY(-6px);
      box-shadow: tokens.$shadow-card-lg;
      background: linear-gradient(
        135deg,
        tokens.$color-background-secondary 0%,
        tokens.$color-background-accent 100%
      );

      .item__icon {
        background: tokens.$color-primary;

        img {
          filter: brightness(0) invert(1);
        }
      }
    }
  }
}

.item {
  &__icon {
    flex-shrink: 0;
    width: 56px;
    height: 56px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: tokens.$color-background-accent;
    border-radius: tokens.$radius-circle;
    transition: all 0.3s ease;

    img {
      width: 28px;
      height: 28px;
      transition: all 0.3s ease;
    }
  }

  &__content {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  &__title {
    @include typography.text-feature-title;
  }

  &__description {
    @include typography.text-body;
  }
}

// Responsive styles
@media (max-width: tokens.$breakpoint-tablet) {
  .features {
    margin: tokens.$spacing-xl auto;

    &__grid {
      grid-template-columns: repeat(2, 1fr);
      gap: tokens.$spacing-lg;
    }

    &__item {
      padding: tokens.$spacing-lg;
    }
  }
}

@media (max-width: tokens.$breakpoint-mobile) {
  .features {
    margin: tokens.$spacing-lg auto;

    &__grid {
      grid-template-columns: 1fr;
    }

    &__item {
      flex-direction: column;
      align-items: flex-start;
      gap: tokens.$spacing-md;
      padding: tokens.$spacing-md;
    }
  }
}

// Animation keyframes
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// Apply animations to items
.features__item {
  opacity: 0;
  animation: fadeInUp 0.6s ease forwards;

  @for $i from 1 through 6 {
    &:nth-child(#{$i}) {
      animation-delay: #{$i * 0.1}s;
    }
  }
}
